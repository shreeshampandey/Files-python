import numpy as np

def sine_taylor(x, n):
    result = 0.0
    sign = 1

    for i in range(1, n+1):
        term = sign * (x**(2*i - 1)) / np.math.factorial(2*i - 1)
        result += term
        sign *= -1

    return result

def cosine_taylor(x, n):
    result = 0.0
    sign = 1

    for i in range(n):
        term = sign * (x**(2*i)) / np.math.factorial(2*i)
        result += term
        sign *= -1

    return result

def main():
    x = float(input("Enter the value of x: "))
    n = int(input("Enter the number of terms to use in Taylor series expansion: "))

    function_choice = input("Choose a function (sin/cos): ")

    if function_choice.lower() == "sin":
        actual_value = np.sin(x)
        approx_value = sine_taylor(x, n)
    elif function_choice.lower() == "cos":
        actual_value = np.cos(x)
        approx_value = cosine_taylor(x, n)
    else:
        print("Invalid function choice.")
        return

    difference = actual_value - approx_value
    error = np.abs(difference)

    print(f"Actual value: {actual_value:.6f}")
    print(f"Approximated value: {approx_value:.6f}")
    print(f"Difference: {difference:.6f}")
    print(f"Error: {error:.6f}")

if __name__ == '__main__':
    main()
